{"version":3,"sources":["../src/catchAsync.ts"],"sourcesContent":["import { NextFunction, Request, Response } from \"express\";\n\n/**\n * Responsible for handling the try catch block and directing any errors to the next function\n * @param fn is usually an asynchronous function\n */\n\nexport const catchAsync =\n  (fn: any) => (req: Request, res: Response, next: NextFunction) => {\n    Promise.resolve(fn(req, res, next)).catch((err) => next(err));\n  };\n"],"names":["catchAsync","fn","req","res","next","Promise","resolve","catch","err"],"mappings":"AAAA;;;;+BAOaA;;aAAAA;;AAAN,MAAMA,aACX,CAACC,KAAY,CAACC,KAAcC,KAAeC,OAAuB;QAChEC,QAAQC,OAAO,CAACL,GAAGC,KAAKC,KAAKC,OAAOG,KAAK,CAAC,CAACC,MAAQJ,KAAKI;IAC1D"}